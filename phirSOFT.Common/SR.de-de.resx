<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ex_IndexInvalid" xml:space="preserve">
    <value>Der Index "{0}" ist nicht gültig.</value>
  </data>
  <data name="ex_IndexOutOfRange" xml:space="preserve">
    <value>Der Index "{0}" lag außerhalb des gültigen Bereichs. Gültiger Bereich: {1} - {2}. </value>
  </data>
  <data name="ex_InvalidObjectState" xml:space="preserve">
    <value>Der Zustand des Objekts "{0}" ist nicht gültig.</value>
  </data>
  <data name="ex_LenghtNotEqual" xml:space="preserve">
    <value>Die Länge der zu vergleichenden Felder stimmt nicht überein.</value>
  </data>
  <data name="ex_NotMd5" xml:space="preserve">
    <value>Das übergebene Array stellt keine MD5 Hashsumme dar. Die Länge muss 16 sein.</value>
  </data>
  <data name="ex_ObjectLocked" xml:space="preserve">
    <value>Der Zustand des Objekts "{0}" kann nicht geändert werden, da es gesperrt ist.</value>
  </data>
  <data name="ex_OriginalMessage" xml:space="preserve">
    <value>
Ursprüngliche Meldung: {0}</value>
  </data>
  <data name="ex_ValueOutOfRange" xml:space="preserve">
    <value>Der Wert "{0}" lag außerhalb des gültigen Bereichs. Gültiger Bereicht {1} - {2}.</value>
  </data>
  <data name="ex_ValueToSmall" xml:space="preserve">
    <value>Der Wert "{0} ist zu klein. Er muss mindestens {1} betragen.</value>
  </data>
  <data name="msg_OutOfRange" xml:space="preserve">
    <value>Die Zahl {0} liegt außerhalb des gültigen Bereiches. Bitte geben sie eine Zahl zwischen {1} und {2} an. </value>
  </data>
  <data name="pr_EnterNumber" xml:space="preserve">
    <value>Bitte geben sie eine Zahl ein.</value>
  </data>
  <data name="pr_PressAnyKeyToContinue" xml:space="preserve">
    <value>Drücken sie eine beliebige Tast zum Fortfahren...</value>
  </data>
  <data name="pr_PressKeyToContinue" xml:space="preserve">
    <value>Drücken sie eine Taste zum Fortfahren...</value>
  </data>
  <data name="descr_BinaryFormatterLong" xml:space="preserve">
    <value>Speichert Daten in einem einfachen binären Format.</value>
  </data>
  <data name="descr_BinaryFormatterShort" xml:space="preserve">
    <value>Binärdatei</value>
  </data>
  <data name="descr_XMLFormatterLong" xml:space="preserve">
    <value>Speichert Daten in einer XML Datei.</value>
  </data>
  <data name="descr_XMLFormatterShort" xml:space="preserve">
    <value>XML-Datei</value>
  </data>
  <data name="descr_DefaultDocumentName" xml:space="preserve">
    <value>Unbenannt {0}</value>
  </data>
  <data name="ex_IncompatibleType" xml:space="preserve">
    <value>Inkompatibler Typ.</value>
  </data>
  <data name="ex_NotAHash" xml:space="preserve">
    <value>Das übergeben Array ist keine gültige Hashsumme.</value>
  </data>
  <data name="ex_SerialisationFailed" xml:space="preserve">
    <value>Could not serialize data.</value>
  </data>
  <data name="ex_DeserialisationFailed" xml:space="preserve">
    <value>Daten konnten nicht deserialisiert werden.</value>
  </data>
  <data name="ex_ValueNoEmptyCollection" xml:space="preserve">
    <value>'Values' darf keine lehre Liste sein.</value>
  </data>
</root>